# Generated by Django 5.1.2 on 2025-02-25 23:26

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Modules",
            fields=[
                ("module_id", models.AutoField(primary_key=True, serialize=False)),
                ("module_name", models.CharField(max_length=100, unique=True)),
            ],
            options={
                "db_table": "modules",
            },
        ),
        migrations.CreateModel(
            name="Subroutines",
            fields=[
                ("subroutine_id", models.AutoField(primary_key=True, serialize=False)),
                ("subroutine_name", models.CharField(max_length=100)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subroutine_module",
                        to="app.modules",
                    ),
                ),
            ],
            options={
                "db_table": "subroutines",
            },
        ),
        migrations.CreateModel(
            name="SubroutineLocalArrays",
            fields=[
                ("local_arry_id", models.AutoField(primary_key=True, serialize=False)),
                ("array_name", models.CharField(max_length=100)),
                ("dim", models.IntegerField()),
                (
                    "subroutine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subroutine_locals",
                        to="app.subroutines",
                    ),
                ),
            ],
            options={
                "db_table": "subroutine_local_arrays",
            },
        ),
        migrations.CreateModel(
            name="SubroutineCalltree",
            fields=[
                ("parent_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "child_subroutine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="child_subroutine",
                        to="app.subroutines",
                    ),
                ),
                (
                    "parent_subroutine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parent_subroutine",
                        to="app.subroutines",
                    ),
                ),
            ],
            options={
                "db_table": "subroutine_calltree",
            },
        ),
        migrations.CreateModel(
            name="SubroutineArgs",
            fields=[
                ("arg_id", models.AutoField(primary_key=True, serialize=False)),
                ("arg_type", models.CharField(max_length=100)),
                ("arg_name", models.CharField(max_length=100)),
                ("dim", models.IntegerField()),
                (
                    "subroutine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subroutine_args",
                        to="app.subroutines",
                    ),
                ),
            ],
            options={
                "db_table": "subroutine_args",
            },
        ),
        migrations.CreateModel(
            name="TypeDefinitions",
            fields=[
                ("define_id", models.AutoField(primary_key=True, serialize=False)),
                ("member_type", models.CharField(max_length=100)),
                ("member_name", models.CharField(max_length=100)),
                ("dim", models.IntegerField()),
                ("bounds", models.CharField(max_length=100)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="type_def_module",
                        to="app.modules",
                    ),
                ),
            ],
            options={
                "db_table": "type_definitions",
            },
        ),
        migrations.CreateModel(
            name="UserTypeInstances",
            fields=[
                ("instance_id", models.AutoField(primary_key=True, serialize=False)),
                ("instance_name", models.CharField(max_length=100)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="instance_module",
                        to="app.modules",
                    ),
                ),
            ],
            options={
                "db_table": "user_type_instances",
            },
        ),
        migrations.CreateModel(
            name="SubroutineActiveGlobalVars",
            fields=[
                ("variable_id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=2)),
                (
                    "subroutine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="subroutine_dtype_vars",
                        to="app.subroutines",
                    ),
                ),
                (
                    "member",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_member",
                        to="app.typedefinitions",
                    ),
                ),
                (
                    "instance",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="active_instances",
                        to="app.usertypeinstances",
                    ),
                ),
            ],
            options={
                "db_table": "subroutine_active_global_vars",
            },
        ),
        migrations.CreateModel(
            name="UserTypes",
            fields=[
                ("user_type_id", models.AutoField(primary_key=True, serialize=False)),
                ("user_type_name", models.CharField(max_length=100, unique=True)),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_type_module",
                        to="app.modules",
                    ),
                ),
            ],
            options={
                "db_table": "user_types",
            },
        ),
        migrations.AddField(
            model_name="usertypeinstances",
            name="instance_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="instance_type",
                to="app.usertypes",
            ),
        ),
        migrations.AddField(
            model_name="typedefinitions",
            name="user_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="user_type_def",
                to="app.usertypes",
            ),
        ),
        migrations.CreateModel(
            name="ModuleDependency",
            fields=[
                ("dependency_id", models.AutoField(primary_key=True, serialize=False)),
                ("object_used", models.CharField(max_length=100)),
                (
                    "dep_module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="moduledependency_dep_module_set",
                        to="app.modules",
                    ),
                ),
                (
                    "module",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="app.modules"
                    ),
                ),
            ],
            options={
                "db_table": "module_dependency",
                "constraints": [
                    models.UniqueConstraint(
                        fields=("module", "dep_module", "object_used"),
                        name="unique_mod_dep",
                    )
                ],
            },
        ),
        migrations.AddConstraint(
            model_name="subroutines",
            constraint=models.UniqueConstraint(
                fields=("subroutine_name", "module"), name="unique_subs"
            ),
        ),
        migrations.AddConstraint(
            model_name="subroutinelocalarrays",
            constraint=models.UniqueConstraint(
                fields=("subroutine", "array_name"), name="unique_sub_locals"
            ),
        ),
        migrations.AddConstraint(
            model_name="subroutinecalltree",
            constraint=models.UniqueConstraint(
                fields=("parent_subroutine", "child_subroutine"), name="unique_calltree"
            ),
        ),
        migrations.AddConstraint(
            model_name="subroutineargs",
            constraint=models.UniqueConstraint(
                fields=("subroutine", "arg_type", "arg_name"), name="unique_sub_args"
            ),
        ),
        migrations.AddConstraint(
            model_name="subroutineactiveglobalvars",
            constraint=models.UniqueConstraint(
                fields=("subroutine", "instance", "member", "status"),
                name="unique_sub_dtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="usertypes",
            constraint=models.UniqueConstraint(
                fields=("module", "user_type_name"), name="unique_types"
            ),
        ),
        migrations.AddConstraint(
            model_name="usertypeinstances",
            constraint=models.UniqueConstraint(
                fields=("instance_type", "instance_name"), name="unique_instances"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="typedefinitions",
            unique_together={("user_type", "member_type", "member_name", "module")},
        ),
    ]
